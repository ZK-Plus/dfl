{"abi":[{"type":"constructor","inputs":[{"name":"_verifier","type":"address","internalType":"contract IRiscZeroVerifier"}],"stateMutability":"nonpayable"},{"type":"function","name":"get","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"imageId","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"number","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"set","inputs":[{"name":"x","type":"uint256","internalType":"uint256"},{"name":"seal","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifier","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IRiscZeroVerifier"}],"stateMutability":"view"}],"bytecode":{"object":"0x60a0604052348015600f57600080fd5b506040516103e53803806103e5833981016040819052602c916040565b6001600160a01b031660805260008055606e565b600060208284031215605157600080fd5b81516001600160a01b0381168114606757600080fd5b9392505050565b60805161035661008f600039600081816061015261011f01526103566000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632b7ac3f31461005c5780636d4ce63c146100a05780638381f58a146100b25780638b282947146100bb578063ef3f7dd5146100d0575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6000545b604051908152602001610097565b6100a460005481565b6100ce6100c936600461021c565b6100f7565b005b6100a47feca3d642bcc58d261c1846f619b3a55687f206ac0ad2cb25d73d577e7b7dd21681565b60008360405160200161010c91815260200190565b60405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab750e7584847feca3d642bcc58d261c1846f619b3a55687f206ac0ad2cb25d73d577e7b7dd21660001b6002866040516101829190610298565b602060405180830381855afa15801561019f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906101c291906102c7565b6040518563ffffffff1660e01b81526004016101e194939291906102e0565b60006040518083038186803b1580156101f957600080fd5b505afa15801561020d573d6000803e3d6000fd5b50505060009490945550505050565b60008060006040848603121561023157600080fd5b83359250602084013567ffffffffffffffff8082111561025057600080fd5b818601915086601f83011261026457600080fd5b81358181111561027357600080fd5b87602082850101111561028557600080fd5b6020830194508093505050509250925092565b6000825160005b818110156102b9576020818601810151858301520161029f565b506000920191825250919050565b6000602082840312156102d957600080fd5b5051919050565b606081528360608201528385608083013760006080858301015260006080601f19601f87011683010190508360208301528260408301529594505050505056fea264697066735822122044ba5227319e8506c5291d20d27c067fbb6600a7339ae5990281d46261b25e9464736f6c63430008190033","sourceMap":"1123:1453:1:-:0;;;1960:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2011:20:1;;;2050:1;2041:10;;1123:1453;;14:317:40;111:6;164:2;152:9;143:7;139:23;135:32;132:52;;;180:1;177;170:12;132:52;206:16;;-1:-1:-1;;;;;251:31:40;;241:42;;231:70;;297:1;294;287:12;231:70;320:5;14:317;-1:-1:-1;;;14:317:40:o;:::-;1123:1453:1;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632b7ac3f31461005c5780636d4ce63c146100a05780638381f58a146100b25780638b282947146100bb578063ef3f7dd5146100d0575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6000545b604051908152602001610097565b6100a460005481565b6100ce6100c936600461021c565b6100f7565b005b6100a47feca3d642bcc58d261c1846f619b3a55687f206ac0ad2cb25d73d577e7b7dd21681565b60008360405160200161010c91815260200190565b60405160208183030381529060405290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab750e7584847feca3d642bcc58d261c1846f619b3a55687f206ac0ad2cb25d73d577e7b7dd21660001b6002866040516101829190610298565b602060405180830381855afa15801561019f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906101c291906102c7565b6040518563ffffffff1660e01b81526004016101e194939291906102e0565b60006040518083038186803b1580156101f957600080fd5b505afa15801561020d573d6000803e3d6000fd5b50505060009490945550505050565b60008060006040848603121561023157600080fd5b83359250602084013567ffffffffffffffff8082111561025057600080fd5b818601915086601f83011261026457600080fd5b81358181111561027357600080fd5b87602082850101111561028557600080fd5b6020830194508093505050509250925092565b6000825160005b818110156102b9576020818601810151858301520161029f565b506000920191825250919050565b6000602082840312156102d957600080fd5b5051919050565b606081528360608201528385608083013760006080858301015260006080601f19601f87011683010190508360208301528260408301529594505050505056fea264697066735822122044ba5227319e8506c5291d20d27c067fbb6600a7339ae5990281d46261b25e9464736f6c63430008190033","sourceMap":"1123:1453:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:43;;;;;;;;-1:-1:-1;;;;;205:32:40;;;187:51;;175:2;160:18;1202:43:1;;;;;;;;2499:75;2535:7;2561:6;2499:75;;;395:25:40;;;383:2;368:18;2499:75:1;249:177:40;1845:21:1;;;;;;2176:274;;;;;;:::i;:::-;;:::i;:::-;;1645:52;;769:66:2;1645:52:1;;2176:274;2330:20;2364:1;2353:13;;;;;;395:25:40;;383:2;368:18;;249:177;2353:13:1;;;;;;;;;;;;;2330:36;;2376:8;-1:-1:-1;;;;;2376:15:1;;2392:4;;769:66:2;761:75;;2407:15:1;2414:7;2407:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:47;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2433:6:1;:10;;;;-1:-1:-1;;;;2176:274:1:o;431:659:40:-;510:6;518;526;579:2;567:9;558:7;554:23;550:32;547:52;;;595:1;592;585:12;547:52;631:9;618:23;608:33;;692:2;681:9;677:18;664:32;715:18;756:2;748:6;745:14;742:34;;;772:1;769;762:12;742:34;810:6;799:9;795:22;785:32;;855:7;848:4;844:2;840:13;836:27;826:55;;877:1;874;867:12;826:55;917:2;904:16;943:2;935:6;932:14;929:34;;;959:1;956;949:12;929:34;1004:7;999:2;990:6;986:2;982:15;978:24;975:37;972:57;;;1025:1;1022;1015:12;972:57;1056:2;1052;1048:11;1038:21;;1078:6;1068:16;;;;;431:659;;;;;:::o;1277:412::-;1406:3;1444:6;1438:13;1469:1;1479:129;1493:6;1490:1;1487:13;1479:129;;;1591:4;1575:14;;;1571:25;;1565:32;1552:11;;;1545:53;1508:12;1479:129;;;-1:-1:-1;1663:1:40;1627:16;;1652:13;;;-1:-1:-1;1627:16:40;1277:412;-1:-1:-1;1277:412:40:o;1694:184::-;1764:6;1817:2;1805:9;1796:7;1792:23;1788:32;1785:52;;;1833:1;1830;1823:12;1785:52;-1:-1:-1;1856:16:40;;1694:184;-1:-1:-1;1694:184:40:o;1883:535::-;2096:2;2085:9;2078:21;2135:6;2130:2;2119:9;2115:18;2108:34;2193:6;2185;2179:3;2168:9;2164:19;2151:49;2250:1;2244:3;2235:6;2224:9;2220:22;2216:32;2209:43;2059:4;2320:3;2313:2;2309:7;2304:2;2296:6;2292:15;2288:29;2277:9;2273:45;2269:55;2261:63;;2362:6;2355:4;2344:9;2340:20;2333:36;2405:6;2400:2;2389:9;2385:18;2378:34;1883:535;;;;;;;:::o","linkReferences":{},"immutableReferences":{"236":[{"start":97,"length":32},{"start":287,"length":32}]}},"methodIdentifiers":{"get()":"6d4ce63c","imageId()":"ef3f7dd5","number()":"8381f58a","set(uint256,bytes)":"8b282947","verifier()":"2b7ac3f3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IRiscZeroVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract demonstrates one pattern for offloading the computation of an expensive      or difficult to implement function to a RISC Zero guest running on Bonsai.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A starter application using RISC Zero.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize the contract, binding it to a specified RISC Zero verifier.\"},\"get()\":{\"notice\":\"Returns the number stored.\"},\"imageId()\":{\"notice\":\"Image ID of the only zkVM binary to accept verification from.         The image ID is similar to the address of a smart contract.         It uniquely represents the logic of that guest program,         ensuring that only proofs generated from a pre-defined guest program         (in this case, checking if a number is even) are considered valid.\"},\"number()\":{\"notice\":\"A number that is guaranteed, by the RISC Zero zkVM, to be even.         It can be set by calling the `set` function.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the even number stored on the contract. Requires a RISC Zero proof that the number is even.\"},\"verifier()\":{\"notice\":\"RISC Zero verifier contract address.\"}},\"notice\":\"This basic application holds a number, guaranteed to be even.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EvenNumber.sol\":\"EvenNumber\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\"]},\"sources\":{\"contracts/EvenNumber.sol\":{\"keccak256\":\"0x5a2950f49dc5f51f272242e4eea7d1358e4a98eb8d6b309099a0e4de44ca9406\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d87d803217a6a981efe0c025ce032550acc16140ed7b187fc0e0487be47a59b9\",\"dweb:/ipfs/QmaNLSrTrdZotsAHf4FS8k9hqXW72KKNh3Fsx4vrGrmbyt\"]},\"contracts/ImageID.sol\":{\"keccak256\":\"0x6a5dd4c3c862070a2c74527844a54d07c473ee86db7bfe3e0ed1bc7c5a92aadc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bc5cfbc36b8ae829a66b6903ff7892f2a3297a031b92e631563c2fa55bcf36bf\",\"dweb:/ipfs/QmPoXe2smebhqYG97SKb7kRtjowZVcypP997ezukFHqLRo\"]},\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0\",\"dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IRiscZeroVerifier","name":"_verifier","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"stateMutability":"view","type":"function","name":"get","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"imageId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"number","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"bytes","name":"seal","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"set"},{"inputs":[],"stateMutability":"view","type":"function","name":"verifier","outputs":[{"internalType":"contract IRiscZeroVerifier","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Initialize the contract, binding it to a specified RISC Zero verifier."},"get()":{"notice":"Returns the number stored."},"imageId()":{"notice":"Image ID of the only zkVM binary to accept verification from.         The image ID is similar to the address of a smart contract.         It uniquely represents the logic of that guest program,         ensuring that only proofs generated from a pre-defined guest program         (in this case, checking if a number is even) are considered valid."},"number()":{"notice":"A number that is guaranteed, by the RISC Zero zkVM, to be even.         It can be set by calling the `set` function."},"set(uint256,bytes)":{"notice":"Set the even number stored on the contract. Requires a RISC Zero proof that the number is even."},"verifier()":{"notice":"RISC Zero verifier contract address."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/","risc0-ethereum/=lib/risc0-ethereum/","risc0/=lib/risc0-ethereum/contracts/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/EvenNumber.sol":"EvenNumber"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/EvenNumber.sol":{"keccak256":"0x5a2950f49dc5f51f272242e4eea7d1358e4a98eb8d6b309099a0e4de44ca9406","urls":["bzz-raw://d87d803217a6a981efe0c025ce032550acc16140ed7b187fc0e0487be47a59b9","dweb:/ipfs/QmaNLSrTrdZotsAHf4FS8k9hqXW72KKNh3Fsx4vrGrmbyt"],"license":"Apache-2.0"},"contracts/ImageID.sol":{"keccak256":"0x6a5dd4c3c862070a2c74527844a54d07c473ee86db7bfe3e0ed1bc7c5a92aadc","urls":["bzz-raw://bc5cfbc36b8ae829a66b6903ff7892f2a3297a031b92e631563c2fa55bcf36bf","dweb:/ipfs/QmPoXe2smebhqYG97SKb7kRtjowZVcypP997ezukFHqLRo"],"license":"Apache-2.0"},"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol":{"keccak256":"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4","urls":["bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0","dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX"],"license":"Apache-2.0"},"lib/risc0-ethereum/contracts/src/Util.sol":{"keccak256":"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82","urls":["bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c","dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"],"license":"Apache-2.0"}},"version":1},"id":1}