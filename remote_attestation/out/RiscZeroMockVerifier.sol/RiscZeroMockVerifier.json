{"abi":[{"type":"constructor","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"mockProve","inputs":[{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"mockProve","inputs":[{"name":"imageId","type":"bytes32","internalType":"bytes32"},{"name":"journalDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"verify","inputs":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"imageId","type":"bytes32","internalType":"bytes32"},{"name":"journalDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"verifyIntegrity","inputs":[{"name":"receipt","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"view"},{"type":"error","name":"SelectorMismatch","inputs":[{"name":"received","type":"bytes4","internalType":"bytes4"},{"name":"expected","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"VerificationFailed","inputs":[]}],"bytecode":{"object":"0x60a0604052348015600f57600080fd5b506040516109d73803806109d7833981016040819052602c91603d565b6001600160e01b031916608052606c565b600060208284031215604e57600080fd5b81516001600160e01b031981168114606557600080fd5b9392505050565b60805161093d61009a6000396000818160610152818160ee015281816101fa015261025f015261093d6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063053c238d1461005c5780631599ead5146100a15780633a115bb1146100b657806366cf0e4b14610149578063ab750e751461015c575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b46100af3660046106a5565b61016f565b005b61013c6100c43660046106e0565b604080518082019091526060815260006020820152604080518082019091526001600160e01b03197f000000000000000000000000000000000000000000000000000000000000000016606082015260648101839052806084810160408051601f198184030181529190528152602001929092525090565b604051610098919061071d565b61013c610157366004610763565b610189565b6100b461016a366004610785565b6101ba565b61018661017c8280610804565b83602001356101d7565b50565b6040805180820190915260608152600060208201526101b36100c46101ae85856102fc565b610463565b9392505050565b6101d184846101cc6101ae86866102fc565b6101d7565b50505050565b6101e5600460008486610852565b6101ee9161087c565b6001600160e01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319161461029257610236600460008486610852565b61023f9161087c565b604051632e2ce35360e21b81526001600160e01b031991821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482015260440160405180910390fd5b60408051602081018390520160408051601f1981840301815291905280516020909101206102c38360048187610852565b6040516102d19291906108ac565b6040518091039020146102f75760405163439cc0cd60e01b815260040160405180910390fd5b505050565b610304610660565b6040518060a0016040528084815260200160028060405161033c907072697363302e53797374656d537461746560781b815260110190565b602060405180830381855afa158015610359573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061037c91906108bc565b60408051602081019290925260009082018190526060820152600160f81b606482015260660160408051601f19818403018152908290526103bc916108d5565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc91906108bc565b815260200160405180604001604052806000600281111561041f5761041f6108f1565b8152602001600060ff1681525081526020016000801b815260200161045a60405180604001604052808681526020016000801b8152506105c8565b90529392505050565b600060028060405161048d907172697363302e52656365697074436c61696d60701b815260120190565b602060405180830381855afa1580156104aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104cd91906108bc565b606084015184516020860151608087015160408801515160189060028111156104f8576104f86108f1565b60408a810151602090810151825191820199909952908101969096526060860194909452608085019290925260a084015263ffffffff909116901b60e01b6001600160e01b03191660c082015260f89190911b6001600160f81b03191660c4820152600160fa1b60c882015260ca015b60408051601f1981840301815290829052610582916108d5565b602060405180830381855afa15801561059f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105c291906108bc565b92915050565b60006002806040516105ec906b1c9a5cd8cc0b93dd5d1c1d5d60a21b8152600c0190565b602060405180830381855afa158015610609573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061062c91906108bc565b83516020808601516040805192830194909452928101919091526060810191909152600160f91b6080820152608201610568565b6040805160a08101825260008082526020820152908101610691604080518082019091526000808252602082015290565b815260006020820181905260409091015290565b6000602082840312156106b757600080fd5b813567ffffffffffffffff8111156106ce57600080fd5b8201604081850312156101b357600080fd5b6000602082840312156106f257600080fd5b5035919050565b60005b838110156107145781810151838201526020016106fc565b50506000910152565b60208152600082516040602084015280518060608501526107458160808601602085016106f9565b60209490940151604084015250506080601f909201601f1916010190565b6000806040838503121561077657600080fd5b50508035926020909101359150565b6000806000806060858703121561079b57600080fd5b843567ffffffffffffffff808211156107b357600080fd5b818701915087601f8301126107c757600080fd5b8135818111156107d657600080fd5b8860208285010111156107e857600080fd5b6020928301999098509187013596604001359550909350505050565b6000808335601e1984360301811261081b57600080fd5b83018035915067ffffffffffffffff82111561083657600080fd5b60200191503681900382131561084b57600080fd5b9250929050565b6000808585111561086257600080fd5b8386111561086f57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156108a45780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6000602082840312156108ce57600080fd5b5051919050565b600082516108e78184602087016106f9565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206c3e5de2e7d56ab44a58e9c404ce9298a0204801bcbcb2454777e467d5e56e4964736f6c63430008190033","sourceMap":"1285:2531:34:-:0;;;1976:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2015:19:34;;;1285:2531;;14:290:39;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;178:16;;-1:-1:-1;;;;;;223:32:39;;213:43;;203:71;;270:1;267;260:12;203:71;293:5;14:290;-1:-1:-1;;;14:290:39:o;:::-;1285:2531:34;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063053c238d1461005c5780631599ead5146100a15780633a115bb1146100b657806366cf0e4b14610149578063ab750e751461015c575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b46100af3660046106a5565b61016f565b005b61013c6100c43660046106e0565b604080518082019091526060815260006020820152604080518082019091526001600160e01b03197f000000000000000000000000000000000000000000000000000000000000000016606082015260648101839052806084810160408051601f198184030181529190528152602001929092525090565b604051610098919061071d565b61013c610157366004610763565b610189565b6100b461016a366004610785565b6101ba565b61018661017c8280610804565b83602001356101d7565b50565b6040805180820190915260608152600060208201526101b36100c46101ae85856102fc565b610463565b9392505050565b6101d184846101cc6101ae86866102fc565b6101d7565b50505050565b6101e5600460008486610852565b6101ee9161087c565b6001600160e01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319161461029257610236600460008486610852565b61023f9161087c565b604051632e2ce35360e21b81526001600160e01b031991821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482015260440160405180910390fd5b60408051602081018390520160408051601f1981840301815291905280516020909101206102c38360048187610852565b6040516102d19291906108ac565b6040518091039020146102f75760405163439cc0cd60e01b815260040160405180910390fd5b505050565b610304610660565b6040518060a0016040528084815260200160028060405161033c907072697363302e53797374656d537461746560781b815260110190565b602060405180830381855afa158015610359573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061037c91906108bc565b60408051602081019290925260009082018190526060820152600160f81b606482015260660160408051601f19818403018152908290526103bc916108d5565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc91906108bc565b815260200160405180604001604052806000600281111561041f5761041f6108f1565b8152602001600060ff1681525081526020016000801b815260200161045a60405180604001604052808681526020016000801b8152506105c8565b90529392505050565b600060028060405161048d907172697363302e52656365697074436c61696d60701b815260120190565b602060405180830381855afa1580156104aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104cd91906108bc565b606084015184516020860151608087015160408801515160189060028111156104f8576104f86108f1565b60408a810151602090810151825191820199909952908101969096526060860194909452608085019290925260a084015263ffffffff909116901b60e01b6001600160e01b03191660c082015260f89190911b6001600160f81b03191660c4820152600160fa1b60c882015260ca015b60408051601f1981840301815290829052610582916108d5565b602060405180830381855afa15801561059f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105c291906108bc565b92915050565b60006002806040516105ec906b1c9a5cd8cc0b93dd5d1c1d5d60a21b8152600c0190565b602060405180830381855afa158015610609573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061062c91906108bc565b83516020808601516040805192830194909452928101919091526060810191909152600160f91b6080820152608201610568565b6040805160a08101825260008082526020820152908101610691604080518082019091526000808252602082015290565b815260006020820181905260409091015290565b6000602082840312156106b757600080fd5b813567ffffffffffffffff8111156106ce57600080fd5b8201604081850312156101b357600080fd5b6000602082840312156106f257600080fd5b5035919050565b60005b838110156107145781810151838201526020016106fc565b50506000910152565b60208152600082516040602084015280518060608501526107458160808601602085016106f9565b60209490940151604084015250506080601f909201601f1916010190565b6000806040838503121561077657600080fd5b50508035926020909101359150565b6000806000806060858703121561079b57600080fd5b843567ffffffffffffffff808211156107b357600080fd5b818701915087601f8301126107c757600080fd5b8135818111156107d657600080fd5b8860208285010111156107e857600080fd5b6020928301999098509187013596604001359550909350505050565b6000808335601e1984360301811261081b57600080fd5b83018035915067ffffffffffffffff82111561083657600080fd5b60200191503681900382131561084b57600080fd5b9250929050565b6000808585111561086257600080fd5b8386111561086f57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156108a45780818660040360031b1b83161692505b505092915050565b8183823760009101908152919050565b6000602082840312156108ce57600080fd5b5051919050565b600082516108e78184602087016106f9565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206c3e5de2e7d56ab44a58e9c404ce9298a0204801bcbcb2454777e467d5e56e4964736f6c63430008190033","sourceMap":"1285:2531:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:32;;;;;;;;-1:-1:-1;;;;;;176:33:39;;;158:52;;146:2;131:18;1937:32:34;;;;;;;;2310:131;;;;;;:::i;:::-;;:::i;:::-;;3652:162;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;3746:61:34;;;;;;;;;-1:-1:-1;;;;;;3771:8:34;3328:33:39;3754:39:34;;;3316:46:39;3378:11;;;3371:27;;;3746:61:34;3414:12:39;;;3754:39:34;;;-1:-1:-1;;3754:39:34;;;;;;;;;3746:61;;3754:39;3746:61;;;;;-1:-1:-1;3739:68:34;3652:162;;;;;;;;:::i;3302:182::-;;;;;;:::i;:::-;;:::i;2085:181::-;;;;;;:::i;:::-;;:::i;2310:131::-;2383:51;2400:12;:7;;:12;:::i;:::-;2414:7;:19;;;2383:16;:51::i;:::-;2310:131;:::o;3302:182::-;-1:-1:-1;;;;;;;;;;;;;;;;;3415:62:34;3425:51;:42;3444:7;3453:13;3425:18;:42::i;:::-;:49;:51::i;3415:62::-;3408:69;3302:182;-1:-1:-1;;;3302:182:34:o;2085:181::-;2184:75;2201:4;;2207:51;:42;2226:7;2235:13;2207:18;:42::i;:51::-;2184:16;:75::i;:::-;2085:181;;;;:::o;2559:660::-;2890:8;2896:1;2890:8;:4;;:8;:::i;:::-;2883:16;;;:::i;:::-;-1:-1:-1;;;;;2871:28:34;;:8;-1:-1:-1;;;;;2871:28:34;;;2867:132;;2957:8;2963:1;2957:8;:4;;:8;:::i;:::-;2950:16;;;:::i;:::-;2922:66;;-1:-1:-1;;;2922:66:34;;-1:-1:-1;;;;;;4328:15:39;;;2922:66:34;;;4310:34:39;2978:8:34;4380:15:39;;;4360:18;;;4353:43;4244:18;;2922:66:34;;;;;;;2867:132;3129:29;;;;;;4536:19:39;;;4571:12;3129:29:34;;;-1:-1:-1;;3129:29:34;;;;;;;;;3119:40;;3129:29;3119:40;;;;3106:8;:4;3111:1;3106:4;;:8;:::i;:::-;3096:19;;;;;;;:::i;:::-;;;;;;;;:63;3092:121;;3182:20;;-1:-1:-1;;;3182:20:34;;;;;;;;;;;3092:121;2559:660;;;:::o;3653:329:27:-;3728:19;;:::i;:::-;3766:209;;;;;;;;3792:7;3766:209;;;;2747:229;5184:27;;;;;-1:-1:-1;;;5077:32:39;;5134:2;5125:12;;4876:267;5184:27:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2763:207;;;;;;5546:19:39;;;;2860:1:27;5581:12:39;;;5574:28;;;5618:12;;;5611:65;-1:-1:-1;;;5692:12:39;;;5685:60;5761:12;;2763:207:27;;;-1:-1:-1;;2763:207:27;;;;;;;;;;2747:229;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3766:209;;;;3851:34;;;;;;;;3860:21;3851:34;;;;;;;;:::i;:::-;;;;;3883:1;3851:34;;;;;3766:209;;;;3907:1;3899:10;;3766:209;;;;3923:42;:33;;;;;;;;3930:13;3923:33;;;;3953:1;3945:10;;3923:33;;;:40;:42::i;:::-;3766:209;;3759:216;3653:329;-1:-1:-1;;;3653:329:27:o;3988:538::-;4054:7;4080:439;2496:28;;;;;-1:-1:-1;;;6409:33:39;;6467:2;6458:12;;6208:268;2496:28:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4186:11;;;;4215:20;;4253:21;;;;4292:12;;;;4353:14;;;;:21;4379:2;;4346:29;;;;;;;;:::i;:::-;4406:14;;;;;:19;;;;;4100:409;;;;;6800:19:39;;;;6835:12;;;6828:28;;;;6872:12;;;6865:28;;;;6909:12;;;6902:28;;;;6946:13;;;6939:29;4346:35:27;;;;;;6991:3:39;7042:16;-1:-1:-1;;;;;;7038:25:39;7023:13;;;7016:48;7099:16;;;;;-1:-1:-1;;;;;;7099:16:39;7080:13;;;7073:48;-1:-1:-1;;;7137:13:39;;;7130:61;7207:13;;4100:409:27;;;;-1:-1:-1;;4100:409:27;;;;;;;;;;4080:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4073:446;3988:538;-1:-1:-1;;3988:538:27:o;8067:349::-;8128:7;8154:255;8038:22;;;;;-1:-1:-1;;;7432:27:39;;7484:2;7475:12;;7231:262;8038:22:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8260:20;;8298:24;;;;;8174:225;;;;;;7709:19:39;;;;7744:12;;;7737:28;;;;7781:12;;;7774:28;;;;-1:-1:-1;;;7818:12:39;;;7811:60;7887:12;;8174:225:27;7498:407:39;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;221:387:39:-;308:6;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;417:9;404:23;450:18;442:6;439:30;436:50;;;482:1;479;472:12;436:50;505:22;;561:2;543:16;;;539:25;536:45;;;577:1;574;567:12;613:180;672:6;725:2;713:9;704:7;700:23;696:32;693:52;;;741:1;738;731:12;693:52;-1:-1:-1;764:23:39;;613:180;-1:-1:-1;613:180:39:o;798:250::-;883:1;893:113;907:6;904:1;901:13;893:113;;;983:11;;;977:18;964:11;;;957:39;929:2;922:10;893:113;;;-1:-1:-1;;1040:1:39;1022:16;;1015:27;798:250::o;1053:586::-;1234:2;1223:9;1216:21;1197:4;1272:6;1266:13;1315:4;1310:2;1299:9;1295:18;1288:32;1349:12;1343:19;1398:6;1393:2;1382:9;1378:18;1371:34;1414:86;1493:6;1487:3;1476:9;1472:19;1467:2;1453:12;1449:21;1414:86;:::i;:::-;1556:2;1544:15;;;;1538:22;1531:4;1516:20;;1509:52;-1:-1:-1;;1629:3:39;1622:2;1601:15;;;-1:-1:-1;;1597:29:39;1582:45;1578:55;;1053:586::o;1644:248::-;1712:6;1720;1773:2;1761:9;1752:7;1748:23;1744:32;1741:52;;;1789:1;1786;1779:12;1741:52;-1:-1:-1;;1812:23:39;;;1882:2;1867:18;;;1854:32;;-1:-1:-1;1644:248:39:o;1897:733::-;1985:6;1993;2001;2009;2062:2;2050:9;2041:7;2037:23;2033:32;2030:52;;;2078:1;2075;2068:12;2030:52;2118:9;2105:23;2147:18;2188:2;2180:6;2177:14;2174:34;;;2204:1;2201;2194:12;2174:34;2242:6;2231:9;2227:22;2217:32;;2287:7;2280:4;2276:2;2272:13;2268:27;2258:55;;2309:1;2306;2299:12;2258:55;2349:2;2336:16;2375:2;2367:6;2364:14;2361:34;;;2391:1;2388;2381:12;2361:34;2438:7;2431:4;2422:6;2418:2;2414:15;2410:26;2407:39;2404:59;;;2459:1;2456;2449:12;2404:59;2490:4;2482:13;;;;2514:6;;-1:-1:-1;2552:20:39;;;2539:34;;2620:2;2605:18;2592:32;;-1:-1:-1;1897:733:39;;-1:-1:-1;;;;1897:733:39:o;2635:521::-;2712:4;2718:6;2778:11;2765:25;2872:2;2868:7;2857:8;2841:14;2837:29;2833:43;2813:18;2809:68;2799:96;;2891:1;2888;2881:12;2799:96;2918:33;;2970:20;;;-1:-1:-1;3013:18:39;3002:30;;2999:50;;;3045:1;3042;3035:12;2999:50;3078:4;3066:17;;-1:-1:-1;3109:14:39;3105:27;;;3095:38;;3092:58;;;3146:1;3143;3136:12;3092:58;2635:521;;;;;:::o;3437:331::-;3542:9;3553;3595:8;3583:10;3580:24;3577:44;;;3617:1;3614;3607:12;3577:44;3646:6;3636:8;3633:20;3630:40;;;3666:1;3663;3656:12;3630:40;-1:-1:-1;;3692:23:39;;;3737:25;;;;;-1:-1:-1;3437:331:39:o;3773:323::-;-1:-1:-1;;;;;;3893:19:39;;3969:11;;;;4000:1;3992:10;;3989:101;;;4077:2;4071;4064:3;4061:1;4057:11;4054:1;4050:19;4046:28;4042:2;4038:37;4034:46;4025:55;;3989:101;;;3773:323;;;;:::o;4594:277::-;4783:6;4775;4770:3;4757:33;4739:3;4809:16;;4834:13;;;4809:16;4594:277;-1:-1:-1;4594:277:39:o;5148:184::-;5218:6;5271:2;5259:9;5250:7;5246:23;5242:32;5239:52;;;5287:1;5284;5277:12;5239:52;-1:-1:-1;5310:16:39;;5148:184;-1:-1:-1;5148:184:39:o;5784:287::-;5913:3;5951:6;5945:13;5967:66;6026:6;6021:3;6014:4;6006:6;6002:17;5967:66;:::i;:::-;6049:16;;;;;5784:287;-1:-1:-1;;5784:287:39:o;6076:127::-;6137:10;6132:3;6128:20;6125:1;6118:31;6168:4;6165:1;6158:15;6192:4;6189:1;6182:15","linkReferences":{},"immutableReferences":{"50209":[{"start":97,"length":32},{"start":238,"length":32},{"start":506,"length":32},{"start":607,"length":32}]}},"methodIdentifiers":{"SELECTOR()":"053c238d","mockProve(bytes32)":"3a115bb1","mockProve(bytes32,bytes32)":"66cf0e4b","verify(bytes,bytes32,bytes32)":"ab750e75","verifyIntegrity((bytes,bytes32))":"1599ead5"},"gasEstimates":{"creation":{"codeDepositCost":"473000","executionCost":"infinite","totalCost":"infinite"},"external":{"SELECTOR()":"infinite","mockProve(bytes32)":"infinite","mockProve(bytes32,bytes32)":"infinite","verify(bytes,bytes32,bytes32)":"infinite","verifyIntegrity((bytes,bytes32))":"infinite"},"internal":{"_verifyIntegrity(bytes calldata,bytes32)":"infinite"}},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"received\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"expected\",\"type\":\"bytes4\"}],\"name\":\"SelectorMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"name\":\"mockProve\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"mockProve\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"name\":\"verifyIntegrity\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mockProve(bytes32)\":{\"details\":\"You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib.\"},\"verify(bytes,bytes32,bytes32)\":{\"details\":\"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).\",\"params\":{\"imageId\":\"The identifier for the guest program.\",\"journalDigest\":\"The SHA-256 digest of the journal bytes.\",\"seal\":\"The encoded cryptographic proof (i.e. SNARK).\"}},\"verifyIntegrity((bytes,bytes32))\":{\"params\":{\"receipt\":\"The receipt to be verified.\"}}},\"stateVariables\":{\"SELECTOR\":{\"details\":\"A selector is not intended to be collision resistant, in that it is possible to find      two preimages that result in the same selector. This is acceptable since it's purpose      to a route a request among a set of trusted verifiers, and to make errors of sending a      receipt to a mismatching verifiers easier to debug. It is analogous to the ABI      function selectors.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"SelectorMismatch(bytes4,bytes4)\":[{\"notice\":\"Error raised when this verifier receives a receipt with a selector that does not match         its own. The selector value is calculated from the verifier parameters, and so this         usually indicates a mismatch between the version of the prover and this verifier.\"}],\"VerificationFailed()\":[{\"notice\":\"Error raised when cryptographic verification of the zero-knowledge proof fails.\"}]},\"kind\":\"user\",\"methods\":{\"SELECTOR()\":{\"notice\":\"A short key attached to the seal to select the correct verifier implementation.\"},\"mockProve(bytes32)\":{\"notice\":\"Construct a mock receipt for the given claim digest.\"},\"mockProve(bytes32,bytes32)\":{\"notice\":\"Construct a mock receipt for the given image ID and journal.\"},\"verify(bytes,bytes32,bytes32)\":{\"notice\":\"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure.\"},\"verifyIntegrity((bytes,bytes32))\":{\"notice\":\"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\"}},\"notice\":\"Mock verifier contract for RISC Zero receipts of execution.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol\":\"RiscZeroMockVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0-ethereum/=lib/risc0-ethereum/\",\":risc0/=lib/risc0-ethereum/contracts/src/\"]},\"sources\":{\"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0\",\"dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX\"]},\"lib/risc0-ethereum/contracts/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol\":{\"keccak256\":\"0x9db38a5523f851c050fcbeccd3bea36405f373ab2c940531900113d97acb7b32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce8d2e55cac810e3a7a9fa4274330c45b42d12aeb211dacf9b6191383570e96d\",\"dweb:/ipfs/QmPkov4shEhCLQi54Tkssq5s4p5MjmcNJiArhRVZ5g2zei\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes4","name":"received","type":"bytes4"},{"internalType":"bytes4","name":"expected","type":"bytes4"}],"type":"error","name":"SelectorMismatch"},{"inputs":[],"type":"error","name":"VerificationFailed"},{"inputs":[],"stateMutability":"view","type":"function","name":"SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"mockProve","outputs":[{"internalType":"struct Receipt","name":"","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes32","name":"imageId","type":"bytes32"},{"internalType":"bytes32","name":"journalDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"mockProve","outputs":[{"internalType":"struct Receipt","name":"","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"imageId","type":"bytes32"},{"internalType":"bytes32","name":"journalDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"verify"},{"inputs":[{"internalType":"struct Receipt","name":"receipt","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}],"stateMutability":"view","type":"function","name":"verifyIntegrity"}],"devdoc":{"kind":"dev","methods":{"mockProve(bytes32)":{"details":"You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib."},"verify(bytes,bytes32,bytes32)":{"details":"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).","params":{"imageId":"The identifier for the guest program.","journalDigest":"The SHA-256 digest of the journal bytes.","seal":"The encoded cryptographic proof (i.e. SNARK)."}},"verifyIntegrity((bytes,bytes32))":{"params":{"receipt":"The receipt to be verified."}}},"version":1},"userdoc":{"kind":"user","methods":{"SELECTOR()":{"notice":"A short key attached to the seal to select the correct verifier implementation."},"mockProve(bytes32)":{"notice":"Construct a mock receipt for the given claim digest."},"mockProve(bytes32,bytes32)":{"notice":"Construct a mock receipt for the given image ID and journal."},"verify(bytes,bytes32,bytes32)":{"notice":"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure."},"verifyIntegrity((bytes,bytes32))":{"notice":"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/","risc0-ethereum/=lib/risc0-ethereum/","risc0/=lib/risc0-ethereum/contracts/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol":"RiscZeroMockVerifier"},"evmVersion":"paris","libraries":{}},"sources":{"lib/risc0-ethereum/contracts/src/IRiscZeroVerifier.sol":{"keccak256":"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4","urls":["bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0","dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX"],"license":"Apache-2.0"},"lib/risc0-ethereum/contracts/src/Util.sol":{"keccak256":"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82","urls":["bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c","dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"],"license":"Apache-2.0"},"lib/risc0-ethereum/contracts/src/test/RiscZeroMockVerifier.sol":{"keccak256":"0x9db38a5523f851c050fcbeccd3bea36405f373ab2c940531900113d97acb7b32","urls":["bzz-raw://ce8d2e55cac810e3a7a9fa4274330c45b42d12aeb211dacf9b6191383570e96d","dweb:/ipfs/QmPkov4shEhCLQi54Tkssq5s4p5MjmcNJiArhRVZ5g2zei"],"license":"Apache-2.0"}},"version":1},"id":34}